#!/usr/bin/env python

import sys, os
sys.path.append(".")

BETWEEN_POPULATES = 540

def loadGameFiles(db, rec):
    import time, populateFiles
    finish = time.time() + BETWEEN_POPULATES
    populateFiles.main(db, finish, rec)

import sys, downloaderdb, logging, logging.handlers, sitedata, time
handler = logging.handlers.RotatingFileHandler(sitedata.logfile, maxBytes=10000000, backupCount=5)
logging.getLogger().setLevel(logging.DEBUG)
logging.getLogger().addHandler(handler)

import downloaderrecord
with downloaderrecord.DownloaderRecord() as rec:
    logging.info("Downloader starts at %s" % (time.ctime(),))
    if not os.path.exists(sitedata.dbdir):
        logging.info("Making data directory %s" % sitedata.dbdir)
        os.makedirs(sitedata.dbdir)
    if not os.path.exists(sitedata.resultdir):
        logging.info("Making results directory %s" % sitedata.resultdir)
        os.makedirs(sitedata.resultdir)
    toFix = sys.argv[1:]
    if len(toFix) > 0:
        with downloaderdb.MyDB() as db:
            for geek in toFix:
                print db.execute("update files set lastUpdate = null where geek = '%s' and processMethod != 'processGame'" % geek)
                print "Reset %s" % geek
    with downloaderdb.MyDB() as db:
        loadGameFiles(db, rec)
        rec.finish() # not really happy about this not being done by the context manager
        db.execute(rec.toSQL())
        logging.info(str(rec))
